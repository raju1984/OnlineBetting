@model QuickBetCore.Models.UserManagmentIndexViewModel
@using QuickBetCore.Models;
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<style>
    .table-scrollable {
        border: none !important;
    }

    .sidemenu-container .sidemenu > li.active > a,
    .sidemenu-closed.sidemenu-container-fixed .sidemenu-container:hover .sidemenu > li.active > a {
        border: none;
        text-shadow: none;
        font-size: 13px;
    }

    .admin-logo {
        position: relative;
        top: -6px;
        left: -25px;
    }

    table.dataTable tbody td.patient-img {
        padding: 2px;
        max-width: 100% !important;
        text-align: left;
    }

    label {
        display: -webkit-inline-box;
    }

    select.form-control.form-control-sm {
        height: 30px !important;
        margin: 0 15px;
    }

    .label.label-sm {
        font-size: 13px;
        font-weight: 600;
        padding: 6px 6px;
        margin-right: 5px;
    }

    .container {
        max-width: 1170px;
        margin: auto;
    }

    img {
        max-width: 100%;
    }

    .inbox_people {
        background: #f8f8f8 none repeat scroll 0 0;
        float: left;
        overflow: hidden;
        width: 40%;
        border-right: 1px solid #c4c4c4;
    }

    .inbox_msg {
        border: 1px solid #c4c4c4;
        clear: both;
        overflow: hidden;
    }

    .top_spac {
        margin: 20px 0 0;
    }

    .recent_heading {
        float: left;
        width: 40%;
    }

    .srch_bar {
        display: inline-block;
        text-align: right;
        width: 60%;
    }

    .headind_srch {
        padding: 10px 29px 10px 20px;
        overflow: hidden;
        border-bottom: 1px solid #c4c4c4;
    }

    .recent_heading h4 {
        color: #05728f;
        font-size: 21px;
        margin: auto;
    }

    .srch_bar input {
        border: 1px solid #cdcdcd;
        border-width: 0 0 1px 0;
        width: 80%;
        padding: 2px 0 4px 6px;
        background: none;
    }

    .srch_bar .input-group-addon button {
        background: rgba(0, 0, 0, 0) none repeat scroll 0 0;
        border: medium none;
        padding: 0;
        color: #707070;
        font-size: 18px;
    }

    .srch_bar .input-group-addon {
        margin: 0 0 0 -27px;
    }

    .chat_ib h5 {
        font-size: 15px;
        color: #464646;
        margin: 0 0 8px 0;
    }

        .chat_ib h5 span {
            font-size: 13px;
            float: right;
        }

    .chat_ib p {
        font-size: 14px;
        color: #989898;
        margin: auto;
    }

    .chat_img {
        float: left;
        width: 11%;
    }

    .chat_ib {
        float: left;
        padding: 0 0 0 15px;
        width: 88%;
    }

    .chat_people {
        overflow: hidden;
        clear: both;
    }

    .chat_list {
        border-bottom: 1px solid #c4c4c4;
        margin: 0;
        padding: 18px 16px 10px;
    }

    .inbox_chat {
        height: 550px;
        overflow-y: scroll;
    }

    .active_chat {
        background: #ebebeb;
    }

    .incoming_msg_img {
        display: inline-block;
        width: 6%;
    }

    .received_msg {
        display: inline-block;
        padding: 0 0 0 10px;
        vertical-align: top;
        width: 92%;
    }

    .received_withd_msg p {
        background: #ebebeb none repeat scroll 0 0;
        border-radius: 3px;
        color: #646464;
        font-size: 14px;
        margin: 0;
        padding: 5px 10px 5px 12px;
        width: 100%;
    }

    .time_date {
        color: #747474;
        display: block;
        font-size: 12px;
        margin: 8px 0 0;
    }

    .received_withd_msg {
        width: 57%;
    }

    .mesgs {
        float: left;
        padding: 30px 15px 0 25px;
        width: 100%;
    }

    .sent_msg p {
        background: #05728f none repeat scroll 0 0;
        border-radius: 3px;
        font-size: 14px;
        margin: 0;
        color: #fff;
        padding: 5px 10px 5px 12px;
        width: 100%;
    }

    .outgoing_msg {
        overflow: hidden;
        margin: 26px 0 26px;
    }

    .sent_msg {
        float: right;
        width: 46%;
    }

    .input_msg_write input {
        background: rgba(0, 0, 0, 0) none repeat scroll 0 0;
        border: medium none;
        color: #4c4c4c;
        font-size: 15px;
        min-height: 48px;
        width: 100%;
    }

    .type_msg {
        border-top: 1px solid #c4c4c4;
        position: relative;
    }

    .msg_send_btn {
        background: #05728f none repeat scroll 0 0;
        border: medium none;
        border-radius: 50%;
        color: #fff;
        cursor: pointer;
        font-size: 17px;
        height: 33px;
        position: absolute;
        right: 0;
        top: 11px;
        width: 33px;
    }

    .messaging {
        padding: 0 0 0px 0;
    }

    .msg_history {
        height: 516px;
        overflow-y: auto;
    }
</style>
<div class="page-content">
    <div class="row">
        <div class="col-md-12">
            <div class="card card-box">
                <div class="card-head">
                    <br />
                    <br />
                    <header style="margin-left:5px">User Management</header>
                    <br />
                    
                </div>
                <div class="card-body">
                    <a class="btn btn-success" href="@Url.Action("ManagerGroup","UserManagement",new {area="Admin" })" style="margin-left:5px">
                        <i class="fa fa-plus" aria-hidden="true"></i> Add Account Type
                    </a>
                    <h2>AccountType</h2>
                    <div class="table-wrap">
                        <div class="table-responsive">
                            <table class="table display product-overview mb-30"
                                   id="support_table">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null && Model.Accounts!=null && Model.Accounts.Count()>0)
                                    {

                                        foreach (var item in Model.Accounts)
                                        {
                                            <tr>
                                                <td>@item.Name</td>
                                                <td>
                                                    <a href="@Url.Action("EditGroup","UserManagement",new { GpId=@item.Id})"><i class="fa fa-pencil" aria-hidden="true"></i> Manage Permission</a> 
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="card-body">
                    <h2>Users</h2>
                    <a class="btn btn-success" href="@Url.Action("ManagerUsers","UserManagement",new {area="Admin" })" style="margin-left:5px">
                        <i class="fa fa-plus" aria-hidden="true"></i> Add Users
                    </a>
                    <div class="table-wrap">
                        <div class="table-responsive">
                            <table class="table display product-overview mb-30"
                                   id="support_table">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Email Address</th>
                                        <th>Account Type</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null && Model.Users != null && Model.Users.Count() > 0)
                                    {

                                        foreach (var item in Model.Users)
                                        {
                                            string backcoor = item.Status == (int)UserStatus.active ? "" : "background-color: grey;";
                                            <tr style="@backcoor">
                                                <td>@item.Name</td>
                                                <td>@item.Email</td>
                                                <td>@item.AccountType</td>
                                                <td>
                                                    <a href="@Url.Action("EditManagerUsers","UserManagement",new { StaffId=item.UserId})"><i class="fa fa-pencil" aria-hidden="true"></i></a> |
                                                    @if (item.Status == (int)UserStatus.active)
                                                    {
                                                        <a href="javascript:" class="btn btn-danger btn-xs" onclick="BlockCUpdate('buser','@item.UserId')">
                                                            <i class="fa fa-ban"></i>
                                                        </a>
                                                    }
                                                    else
                                                    {
                                                        <a class="btn btn-primary btn-xs" href="javascript:" title="unlock" onclick="BlockCUpdate('uuser','@item.UserId')">
                                                            <i class="fa fa-unlock" aria-hidden="true"></i>
                                                        </a>
                                                    }
                                                    @*<button class="btn btn-sm btn-danger" type="button" onclick="DeleteUser('@item.UserId');"><i class="fa fa-trash" aria-hidden="true"></i></button>*@
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        //$('#datatable').DataTable({
        //    responsive: true,
        //    "aaSorting": []
        //});
        //$('#exampleModal').modal('show');
        $("#UserManagement").addClass("active");
    });
    function validateformdata() {
        var isValid = true;
        if ($('#txttitle').val().trim() == "") {
            $('#txttitle').css('border-color', 'Red');
            isValid = false;
        }
        else {
            $('#txttitle').css('border-color', 'lightgrey');
        }
        if ($('#txtMessage').val().trim() == "") {
            $('#txtMessage').css('border-color', 'Red');
            isValid = false;
        }
        else {
            $('#txtMessage').css('border-color', 'lightgrey');
        }
        return isValid;
    }
    function BlockCUpdate(Type, Id) {
        debugger;
        if (!Type) {
            return false;
        }
        if (!Id) {
            return false;
        }
        var trid = "#tr" + Id;
        var blckId = "#blck" + Id;
        var unblck = "#unblck" + Id;
        debugger;
        Loader(true);
        $.ajax({
            type: "POST",
            url: "/Admin/UserManagement/BlockUser",
            data: '{type: "' + Type + '",Id: "' + Id + '"}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                debugger;
                Loader(false);
                location.reload(true);
                //alertify.alert(response.Msg);
            },
            failure: function (response) {
                Loader(false);
                alert(response.responseText);
            },
            error: function (response) {
                Loader(false);
                alert(response.responseText);
            }
        });
    }

    function DeleteUser(user) {
        Loader(true);
        $.ajax({
            type: "POST",
            url: "/Admin/UserManagement/DeleteUser",
            data: '{Id: "' + parseInt(user) + '"}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                debugger;
                Loader(false);
                location.reload(true);
            },
            failure: function (response) {
                Loader(false);
                alert(response.responseText);
            },
            error: function (response) {
                Loader(false);
                alert(response.responseText);
            }
        });
    }
</script>
